<!-- An ANT build configuration file for the JDiff examples -->

<project name="tests" default="jdiff" basedir=".">

<description>
This build file will generate Javadoc HTML for each version of the
test source code. Then it generates XML from each version,
and finally compares the two XML files to produce an HTML report
describing every change in the API between the two releases of
SuperProduct.
</description>

<target name="usage">
  <echo message="usage: ant jdiff"/>
</target>
 
<!-- ======================================================= -->
<!-- Properties used when generating Javadoc and JDiff output. -->
<!-- ======================================================= -->
<target name="init">
  <property name="app.name" value="JDiff Tests"/>
  <!-- Root of the JDiff hierarchy of directories -->
  <property name="JDIFF_HOME" value=".."/>
  <property name="PROJECTBASE" value="${JDIFF_HOME}/test"/>

  <!-- Values used for the old API -->
  <property name="OLD_SRC" value="${PROJECTBASE}/old"/>
  <property name="OLD_PACKAGES" value="RemovedPackage,ChangedPackage,ChangedPackageDoc,ChangedPackageDoc2"/>
  <property name="OLD_CLASSES" value="NoPackage,NoPackageRemoved"/>
  <property name="OLD_DOCS" value="${PROJECTBASE}/olddocs/"/>
  <property name="OLD_API"  value="Old Test API"/>
  <property name="OLD_API_TITLE" value="JDiff Test Old API"/>

  <!-- Values used for the new API -->
  <property name="NEW_SRC" value="${PROJECTBASE}/new"/>
  <property name="NEW_PACKAGES" value="AddedPackage,ChangedPackage,ChangedPackageDoc,ChangedPackageDoc2"/>
  <property name="NEW_CLASSES" value="NoPackage,NoPackageAdded"/>
  <property name="NEW_DOCS" value="${PROJECTBASE}/newdocs/"/>
  <property name="NEW_API"  value="New Test API"/>
  <property name="NEW_API_TITLE" value="JDiff Test New API"/>

  <!-- Values used for a second report with some changed paramters -->
  <property name="NEW_DOCS2" value="${PROJECTBASE}/newdocs2/"/>

  <path id="class.path">
    <pathelement location="${JDIFF_HOME}/lib/xerces.jar"/>
  </path>
  <property name="BASE_URI" value="http://www.w3.org"/>
  
  <property name="debug" value="true"/>
  <!-- classic, javac13 and JDK1.4 should all work -->
  <property name="build.compiler"  value="javac14"/>    
</target>

<!-- ======================================================= -->
<!-- Run all the steps used to produce Javadoc and JDiff HTML reports -->
<!-- ======================================================= -->
<target name="jdiff" depends="javadoc_old,javadoc_new,jdiff_old_api,jdiff_new_api,jdiff_compare_apis,jdiff_compare_apis2"/>
  
<!-- ======================================================= -->
<!-- Create the directories for the Javadoc output          -->
<!-- ======================================================= -->
<target name="create_javadoc_dirs" depends="init">
  <mkdir dir="${OLD_DOCS}"/>
  <mkdir dir="${NEW_DOCS}"/>
  <mkdir dir="${NEW_DOCS2}"/>
</target>
  	
<!-- ======================================================= -->
<!-- Produce Javadoc HTML for the old API                    -->
<!-- ======================================================= -->
<target name="javadoc_old" depends="create_javadoc_dirs">
<javadoc 
  private="yes"
  sourcepath="${OLD_SRC}"
  destdir="${OLD_DOCS}"
  verbose="no"
  packagenames="${OLD_PACKAGES},${OLD_CLASSES}" 
  doctitle="${OLD_API_TITLE}"
  windowtitle="${OLD_API_TITLE}">
  <classpath>
    <path refid="class.path"/>
  </classpath>
</javadoc>
</target>
		
<!-- ======================================================= -->
<!-- Produce Javadoc HTML for the new API                    -->
<!-- ======================================================= -->
<target name="javadoc_new" depends="create_javadoc_dirs">
<javadoc 
  private="yes"
  sourcepath="${NEW_SRC}"
  destdir="${NEW_DOCS}"
  verbose="no"
  packagenames="${NEW_PACKAGES},${NEW_CLASSES}" 
  doctitle="${NEW_API_TITLE}"
  windowtitle="${NEW_API_TITLE}">
  <classpath>
    <path refid="class.path"/>
  </classpath>
</javadoc>
</target>

<!-- ======================================================= -->
<!-- Use Javadoc with the JDiff doclet to generate an XML file -->
<!-- representing the old API                                  -->
<!-- ======================================================= -->
<target name="jdiff_old_api" depends="create_javadoc_dirs">
<javadoc 
  sourcepath="${OLD_SRC}"
  packagenames="${OLD_PACKAGES},${OLD_CLASSES}">
  <doclet name="jdiff.JDiff"
    path="${JDIFF_HOME}/lib/jdiff.jar:${JDIFF_HOME}/lib/xerces.jar">
    <param name="-excludeclass" value="private"/>
    <param name="-excludemember" value="private"/>
    <param name="-apiname" value="${OLD_API}"/>
    <param name="-baseURI" value="${BASE_URI}"/>
  </doclet>
  <classpath>
    <path refid="class.path"/>    
  </classpath>
</javadoc>		
</target>

<!-- ======================================================= -->
<!-- Use Javadoc with the JDiff doclet to generate an XML file -->
<!-- representing the new API                                  -->
<!-- ======================================================= -->
<target name="jdiff_new_api" depends="create_javadoc_dirs">
<javadoc 
  sourcepath="${NEW_SRC}"
  packagenames="${NEW_PACKAGES},${NEW_CLASSES}">
  <doclet name="jdiff.JDiff"
    path="${JDIFF_HOME}/lib/jdiff.jar:${JDIFF_HOME}/lib/xerces.jar">
    <param name="-excludeclass" value="private"/>
    <param name="-excludemember" value="private"/>
    <param name="-apiname" value="${NEW_API}"/>
    <param name="-baseURI" value="${BASE_URI}"/>
  </doclet>
  <classpath>
    <path refid="class.path"/>    
  </classpath>
</javadoc>		
</target>

<!-- ======================================================= -->
<!-- Use Javadoc with the JDiff doclet to compare the two XML files -->
<!-- representing the old and new APIs, and generate an HTML report -->
<!-- describing the differences between the two APIs                -->
<!-- ======================================================= -->
<target name="jdiff_compare_apis" depends="create_javadoc_dirs">
<!-- To use this task with JDK 1.4, use ANT 1.5 and change -->
<!-- packagenames to sourcefiles.                          -->
<javadoc 
  private="yes"
  sourcepath="${JDIFF_HOME}"
  destdir="${NEW_DOCS}"
  packagenames="${JDIFF_HOME}/lib/Null.java">
  <doclet name="jdiff.JDiff"
    path="${JDIFF_HOME}/lib/jdiff.jar:${JDIFF_HOME}/lib/xerces.jar">
    <param name="-oldapi" value="${OLD_API}"/>
    <param name="-newapi" value="${NEW_API}"/>
    <!-- We could use a file:/// prefix to refer to Javadoc files, or -->
    <!-- we could make them relative to the changes directory.        -->
    <!-- Remember to add a trailing forward slash.                    -->
    <param name="-javadocold" value="../../olddocs/"/>
    <param name="-javadocnew" value="../"/>
  </doclet>
  <classpath>
    <path refid="class.path"/>    
  </classpath>
</javadoc>	
  <!-- Copy one image file. -->
  <copy file="${JDIFF_HOME}/lib/background.gif" todir="${NEW_DOCS}"/>
</target>

<!-- Generate another HTML report comparing the old and new APIs, but -->
<!-- also noting changes in documentation by using -nodocchanges and -->
<!-- using -stats to generate statistics. -->
<target name="jdiff_compare_apis2" depends="create_javadoc_dirs">
<!-- To use this task with JDK 1.4, use ANT 1.5 and change -->
<!-- packagenames to sourcefiles.                          -->
<javadoc 
  private="yes"
  sourcepath="${JDIFF_HOME}"
  destdir="${NEW_DOCS2}"
  packagenames="${JDIFF_HOME}/lib/Null.java">
  <doclet name="jdiff.JDiff"
    path="${JDIFF_HOME}/lib/jdiff.jar:${JDIFF_HOME}/lib/xerces.jar">
    <param name="-docchanges"/>
    <param name="-stats"/>
    <param name="-oldapi" value="${OLD_API}"/>
    <param name="-newapi" value="${NEW_API}"/>
    <!-- We could use a file:/// prefix to refer to Javadoc files, or -->
    <!-- we could make them relative to the changes directory.        -->
    <!-- Remember to add a trailing forward slash.                    -->
    <param name="-javadocold" value="file:///${OLD_DOCS}"/>
    <param name="-javadocnew" value="file:///${NEW_DOCS}"/>
  </doclet>
  <classpath>
    <path refid="class.path"/>    
  </classpath>
</javadoc>	
  <!-- Copy two image files. black.gif is only needed because -stats was -->
  <!-- used -->
  <copy file="${JDIFF_HOME}/lib/background.gif" todir="${NEW_DOCS2}"/>
  <copy file="${JDIFF_HOME}/lib/black.gif" todir="${NEW_DOCS2}"/>
</target>

<!-- ======================================================= -->
<!-- Compile all files in the old API to check they compile  -->
<!-- ======================================================= -->
<target name="compile_old" depends="init">
<javac	
  srcdir="${OLD_SRC}"
  destdir="${OLD_SRC}"
  debug="${debug}">
  <classpath>
    <path refid="class.path"/>
  </classpath>
</javac>
</target>	
	
<!-- ======================================================= -->
<!-- Compile all files in the new API to check they compile  -->
<!-- ======================================================= -->
<target name="compile_new" depends="init">
<javac	
  srcdir="${NEW_SRC}"
  destdir="${NEW_SRC}"
  debug="${debug}">
  <classpath>
    <path refid="class.path"/>
  </classpath>
</javac>
</target>	
	
<!-- ======================================================= -->
<!-- Clean up various files and directories                  -->
<!-- ======================================================= -->
<target	name="clean" depends="init">
  <delete
    includeEmptyDirs="true">
    <fileset dir="${PROJECTBASE}" includes="*API.xml"/>
    <fileset dir="${OLD_DOCS}" includes="**/*"/>
    <fileset dir="${NEW_DOCS}" includes="**/*"/>
    <fileset dir="${NEW_DOCS2}" includes="**/*"/>
  </delete>
</target>
 	
</project>
